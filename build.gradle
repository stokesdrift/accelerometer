apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'groovy'
apply plugin: 'application'

configurations {
  compile {
    transitive = true
  }

  runtime {
    extendsFrom compile
  }
}

buildscript {
  repositories {
    mavenLocal()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    mavenCentral()
  }
  
  dependencies {
    classpath 'com.h2database:h2:1.4.191'
  }
}

sourceCompatibility = '1.7'
targetCompatibility = '1.7'
mainClassName = 'org.stokesdrift.accelerometer.Server'

repositories {
  mavenLocal()
  maven { url 'http://deux.gemjars.org' }
  maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
  mavenCentral()
}

dependencies {
    // compile group: 'commons-collections', name: 'commons-collections', version: '3.2.2'
    testCompile 'junit:junit:4.11'
}

plugins {
    id "org.flywaydb.flyway" version "4.0.3"
}

flyway {
    url = 'jdbc:h2:file:./target/accelerometer'
    user = 'sa'
}

jar {
    manifest {
        attributes 'Implementation-Title': 'Accelerator',
                   'Implementation-Version': version
    }
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
  archives javadocJar, sourcesJar
}

test {
    systemProperties 'property': 'value'
}

signing {
    sign configurations.archives
}

eclipse {
  classpath {
    defaultOutputDir = file('build/classes')
  }
}

uploadArchives {
  repositories {
    mavenDeployer {

      beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

      repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
        authentication(userName: ossrhUsername, password: ossrhPassword)
      }

      snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
        authentication(userName: ossrhUsername, password: ossrhPassword)
      }

      pom.project {
        name 'Accelerometer'
        packaging 'jar'
        description 'Monitoring server and agent'
        url 'http://www.stokesdrift.com'
        scm {
          connection 'scm:git:git@github.com:stokesdrift/accelerometer.git'
          developerConnection 'scm:git:git@github.com:stokesdrift/accelerometer.git'
          url 'git@github.com:stokesdrift/accelerometer.git'
        }

        licenses {
          license {
            name 'MIT License'
            url 'http://www.opensource.org/licenses/mit-license.php'
          }
        }

        developers {
          developer {
            id 'driedtoast'
            name 'Daniel Marchant'
            email 'driedtoast@gmail.com'
          }
        }
      }
    }
  }
}